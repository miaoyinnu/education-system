<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.education.mapper.UserMapper">
    <select id="findByUsername" resultType="com.education.entity.User">
        SELECT id, username, password, role, created_at as createdAt
        FROM user
        WHERE username = #{username}
    </select>
    
    <select id="findIdByUsername" resultType="long">
        SELECT id 
        FROM user 
        WHERE username = #{username}
    </select>
    
    <select id="findStudentIdByUsername" resultType="long">
        SELECT s.id 
        FROM student s
        JOIN user u ON s.user_id = u.id
        WHERE u.username = #{username}
        AND u.role = 'STUDENT'
    </select>
    
    <select id="findById" resultType="com.education.entity.User">
        SELECT id, username, password, role, created_at as createdAt
        FROM user
        WHERE id = #{id}
    </select>

    <!-- 用户管理 -->
    <select id="findByPage" resultType="com.education.entity.User">
        SELECT id, username, role, created_at as createdAt
        FROM user
        <where>
            <if test="search != null and search != ''">
                AND username LIKE CONCAT('%', #{search}, '%')
            </if>
        </where>
        ORDER BY id DESC
        LIMIT #{offset}, #{size}
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*)
        FROM user
        <where>
            <if test="search != null and search != ''">
                AND username LIKE CONCAT('%', #{search}, '%')
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="com.education.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (username, password, role, created_at)
        VALUES (#{username}, #{password}, #{role}, NOW())
    </insert>

    <update id="update" parameterType="com.education.entity.User">
        UPDATE user
        SET username = #{username},
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            role = #{role}
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <select id="existsByUsername" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user
        WHERE username = #{username}
    </select>
</mapper> 