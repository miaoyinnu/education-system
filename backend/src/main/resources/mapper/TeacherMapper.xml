<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.education.mapper.TeacherMapper">
    <select id="getTeacherCourses" resultType="com.education.entity.Course">
        SELECT 
            c.id, 
            c.name, 
            c.semester, 
            c.course_time as courseTime,
            cl.name as classroomName,
            c.max_students as maxStudents,
            c.current_students as currentStudents,
            c.credit,
            ROUND(
                SUM(CASE WHEN g.is_published = true THEN g.score ELSE NULL END) * 1.0 / 
                COUNT(CASE WHEN g.is_published = true AND g.score IS NOT NULL THEN 1 ELSE NULL END)
            , 2) as averageScore
        FROM course c
        JOIN teacher t ON c.teacher_id = t.id
        LEFT JOIN classroom cl ON c.classroom_id = cl.id
        LEFT JOIN grade g ON c.id = g.course_id
        WHERE t.user_id = #{teacherId}
        GROUP BY c.id, c.name, c.semester, c.course_time, cl.name, c.max_students, c.current_students, c.credit
    </select>

    <select id="findByPage" resultType="com.education.entity.Teacher">
        SELECT * FROM teacher
        <where>
            <if test="search != null and search != ''">
                AND name LIKE CONCAT('%', #{search}, '%')
            </if>
        </where>
        ORDER BY id ASC
        LIMIT #{offset}, #{size}
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*) FROM teacher
        <where>
            <if test="search != null and search != ''">
                AND name LIKE CONCAT('%', #{search}, '%')
            </if>
        </where>
    </select>

    <select id="findAll" resultType="com.education.dto.TeacherDTO">
        SELECT 
            t.id,
            t.name,
            t.user_id as userId
        FROM teacher t
        ORDER BY t.id ASC
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO teacher (name, user_id)
        VALUES (#{name}, #{userId})
    </insert>

    <update id="update">
        UPDATE teacher
        SET name = #{name},
            user_id = #{userId}
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM teacher WHERE id = #{id}
    </delete>

    <delete id="deleteByUserId">
        DELETE FROM teacher WHERE user_id = #{userId}
    </delete>

    <select id="hasOngoingCourses" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM course
        WHERE teacher_id = #{id}
        AND semester = (SELECT value FROM system_settings WHERE name = 'current_semester')
    </select>
</mapper> 